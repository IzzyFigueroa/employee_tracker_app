{"version":3,"file":"seed.js","sourceRoot":"","sources":["../../src/config/seed.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,QAAQ,IAAI,EAAE,EAAC,MAAM,IAAI,CAAC;AAClC,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,MAAM,MAAM,iBAAiB,CAAA;AAGpC,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;AACjC,MAAM,SAAS,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,iBAAiB,CAAC,EAAE,OAAO,CAAC,CAAC;AAEtF,MAAM,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;AAC9B,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAA;AAE1C,MAAM,OAAO,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,eAAe,CAAC,EAAE,OAAO,CAAC,CAAC;AAClF,MAAM,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC5B,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAA;AACzC,OAAO,CAAC,IAAI,EAAE,CAAA","sourcesContent":["import {promises as fs} from 'fs';\nimport path from 'path';\nimport client from './connection.js'\n\n\nconst __dirname = path.resolve();\nconst schemaSQL = await fs.readFile(path.join(__dirname, './db/schema.sql'), 'utf-8');\n\nawait client.query(schemaSQL);\nconsole.log('tables created successfully')\n\nconst seedSQL = await fs.readFile(path.join(__dirname, './db/seed.sql'), 'utf-8');\nawait client.query(seedSQL);\nconsole.log('tables seeded successfully')\nprocess.exit()\n\n"]}
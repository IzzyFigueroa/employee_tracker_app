{"version":3,"file":"menu.js","sourceRoot":"","sources":["../../src/lib/menu.ts"],"names":[],"mappings":"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","sourcesContent":["import inquirer from 'inquirer';\nimport { getAllEmployees, getAllDepartments, getAllRoles ,  createDept, createRole, createEmployee, updateEmployeeInDB} from './query.js';\nimport 'console.table';\n\n// import { getAllShops, getAllUsers, c } from './query.js'\n\n\nlet showWelcome = false;\n\nexport async function showAllDepts() {\n const deptArray = await getAllDepartments();\n\n return deptArray\n}\n\nexport async function viewAllEmployees() {\n    const employeesArray = await getAllEmployees();\n    \n    return employeesArray;\n}\n\nexport async function viewAllRoles() {\n  const rolesArray = await getAllRoles();\n    \n  return rolesArray;\n  \n}\n\n\n\nexport async function addDept() {\n// const deptArray = await getAllDepartments();\nconst {name} = await inquirer.prompt([\n    {\n    message: 'Please input a department',\n    name: 'name',\n    type: 'input'\n    },\n    \n])\n\nawait createDept(name)\nconsole.log('\\n You have successfully added a department!\\n')\n  \n}\nexport async function addRole() {\n    const departments = await getAllDepartments(); // Fetch all departments to display in the prompt\n    const departmentChoices = departments.map((dept: { name: string; id: number }) => ({\n      name: dept.name,\n      value: dept.id\n    }));\n  \n    const { title, salary, dept_id } = await inquirer.prompt([\n      {\n        message: 'Please input the role title',\n        name: 'title',\n        type: 'input'\n      },\n      {\n        message: 'Please input the role salary',\n        name: 'salary',\n        type: 'input'\n      },\n      {\n        message: 'Please select the department for this role',\n        name: 'dept_id',\n        type: 'list',\n        choices: departmentChoices\n      },\n    ]);\n  \n    await createRole(title, salary, dept_id);\n    console.log('\\n You have successfully added a role!\\n');\n  }\n  export async function addEmployee() {\n    const roles = await getAllRoles(); // Fetch all roles to display in the prompt\n    const roleChoices = roles.map(role => ({\n      name: role.title,\n      value: role.id\n    }));\n  \n    const employees = await getAllEmployees();\n    const managerChoices = employees.map((employee: { first_name: string; last_name: string; id: number | null }) => ({\n      name: `${employee.first_name} ${employee.last_name}`,\n      value: employee.id\n    }));\n    managerChoices.unshift({ name: 'None', value: null }); // Add an option for no manager\n  \n    const { first_name, last_name, role_id, manager_id } = await inquirer.prompt([\n      {\n        message: 'Please input the employee first name',\n        name: 'first_name',\n        type: 'input'\n      },\n      {\n        message: 'Please input the employee last name',\n        name: 'last_name',\n        type: 'input'\n      },\n      {\n        message: 'Please select the role for this employee',\n        name: 'role_id',\n        type: 'list',\n        choices: roleChoices\n      },\n      {\n        message: 'Please select the manager for this employee',\n        name: 'manager_id',\n        type: 'list',\n        choices: managerChoices\n      },\n    ]);\n  \n    await createEmployee(first_name, last_name, role_id, manager_id);\n    console.log(`\\n You have successfully added ${first_name} ${last_name}\\n`);\n  }\n\n  export async function updateEmployee() {\n    const employees = await getAllEmployees(); // Fetch all employees to display in the prompt\n    const employeeChoices = employees.map(employee => ({\n      name: `${employee.first_name} ${employee.last_name}`,\n      value: employee.id\n    }));\n  \n    const roles = await getAllRoles(); // Fetch all roles to display in the prompt\n    const roleChoices = roles.map(role => ({\n      name: role.title,\n      value: role.id\n    }));\n  \n    const managerChoices = employees.map(employee => ({\n      name: `${employee.first_name} ${employee.last_name}`,\n      value: employee.id\n    }));\n    managerChoices.unshift({ name: 'None', value: null }); // Add an option for no manager\n  \n    const { employee_id, role_id, manager_id } = await inquirer.prompt([\n      {\n        message: 'Please select the employee to update',\n        name: 'employee_id',\n        type: 'list',\n        choices: employeeChoices\n      },\n    \n      {\n        message: 'Please select the new role for this employee',\n        name: 'role_id',\n        type: 'list',\n        choices: roleChoices\n      },\n      {\n        message: 'Please select the new manager for this employee',\n        name: 'manager_id',\n        type: 'list',\n        choices: managerChoices\n      },\n    ]);\n  \n    await updateEmployeeInDB(employee_id, role_id, manager_id);\n    console.log('\\n Updated Employee!\\n');\n  };\n\n\n\nexport async function showMainMenu() {\n\n    if (!showWelcome) {\n        console.log('\\n------ Welcome To The Shop App ------\\n')\n        showWelcome = true;\n    }\n    const { optionFunction } = await inquirer.prompt({\n        message: ' Please select an option',\n        name: 'optionFunction',\n        type: 'list',\n        choices: [\n            {\n                name: 'View All Departments',\n                value: showAllDepts\n            },\n            {\n                name: 'View All Roles',\n                value: viewAllRoles\n            },\n            {\n                name: 'View All Employees',\n                value: viewAllEmployees\n            },\n            {\n                name: 'Add A Department',\n                value: addDept\n\n            },\n            {\n                name: 'Add A Role',\n                value: addRole\n            },\n            {\n                name: 'Add An Employee',\n                value: addEmployee\n            },\n            {\n                name: 'Update An Employee',\n                value: updateEmployee\n            },\n            {\n              name: 'Quit',\n              value: 0\n            }\n          ]\n    });\n\n    if (!optionFunction) {\n        console.log('\\n Thanks for using the app!\\n')\n        process.exit();\n    }\n\n    await optionFunction();\n\n    showMainMenu();\n\n};\n"]}
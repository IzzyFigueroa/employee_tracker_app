{"version":3,"file":"query.js","sourceRoot":"","sources":["../../src/lib/query.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,yBAAyB,CAAC;AAC7C,OAAO,eAAe,CAAC;AAEvB,MAAM,CAAC,KAAK,UAAU,eAAe;IACnC,MAAM,GAAG,GAAG;;;;;;;;;;;;;;;;KAgBT,CAAC;IAEJ,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACzC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;IACnB,OAAO,IAAI,CAAC;AACd,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,iBAAiB;IACrC,MAAM,GAAG,GAAG;;sBAEQ,CAAC;IACrB,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACzC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;IACnB,OAAO,IAAI,CAAC;AACd,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,WAAW;IAC/B,MAAM,GAAG,GAAG;;;KAGT,CAAC;IACJ,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACzC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;IACnB,OAAO,IAAI,CAAC;AACd,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,UAAU,CAAC,IAAY;IAC3C,MAAM,GAAG,GAAG;;KAET,CAAC;IAEJ,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAA;AACjC,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,UAAU,CAAC,KAAa,EAAE,MAAc,EAAE,OAAe;IAC7E,MAAM,GAAG,GAAG;;;GAGX,CAAC;IACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC;IACnE,OAAO,IAAI,CAAC;AACd,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,cAAc,CAAC,UAAkB,EAAE,SAAiB,EAAE,OAAe,EAAE,UAAyB;IACpH,MAAM,GAAG,GAAG;;;;GAIX,CAAC;IACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,UAAU,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC,CAAC;IACvF,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC;AAAA,CAAC;AAEF,MAAM,CAAC,KAAK,UAAU,kBAAkB,CAAC,WAAmB,EAAE,OAAe,EAAE,UAAyB;IACtG,MAAM,GAAG,GAAG;;;;;KAKT,CAAC;IACJ,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC,CAAC;IAC7E,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC","sourcesContent":["import client from \"../config/connection.js\";\nimport 'console.table';\n\nexport async function getAllEmployees() {\n  const sql = `\n    SELECT\n    employees.id AS id,\n    employees.first_name AS first_name,\n    employees.last_name AS last_name,\n    title,\n    name AS department_name,\n    salary,\n    CONCAT(managers.first_name, ' ', managers.last_name) AS manager\n    FROM employees\n    JOIN roles\n     ON employees.role_id = roles.id\n     JOIN department\n    ON roles.dept_id = department.id\n    LEFT JOIN employees as managers\n        ON employees.manager_id = managers.id\n    `;\n\n  const { rows } = await client.query(sql);\n  console.table(rows)\n  return rows;\n}\n\nexport async function getAllDepartments() {\n  const sql = `\n    SELECT\n    * FROM department`;\n  const { rows } = await client.query(sql);\n  console.table(rows)\n  return rows;\n}\n\nexport async function getAllRoles() {\n  const sql = `\n    SELECT\n    * FROM Roles\n    `;\n  const { rows } = await client.query(sql);\n  console.table(rows)\n  return rows;\n}\n\nexport async function createDept(name: string) {\n  const sql = `\n    INSERT INTO department (name) VALUES ($1)\n    `;\n\n  await client.query(sql, [name])\n}\n\nexport async function createRole(title: string, salary: number, dept_id: number) {\n  const sql = `\n  INSERT INTO roles (title, salary, dept_id)\n  VALUES ($1, $2, $3)\n  `;\n  const { rows } = await client.query(sql, [title, salary, dept_id]);\n  return rows;\n}\n\nexport async function createEmployee(first_name: string, last_name: string, role_id: number, manager_id: number | null) {\n  const sql = `\n  INSERT INTO employees (first_name, last_name, role_id, manager_id)\n  VALUES ($1, $2, $3, $4)\n  ;\n  `;\n  const { rows } = await client.query(sql, [first_name, last_name, role_id, manager_id]);\n  return rows[0];\n};\n\nexport async function updateEmployeeInDB(employee_id: number, role_id: number, manager_id: number | null) {\n  const sql = `\n    UPDATE employees\n    SET role_id = $1, manager_id = $2\n    WHERE id = $3\n    ;\n    `;\n  const { rows } = await client.query(sql, [role_id, manager_id, employee_id]);\n  return rows[0];\n}\n\n"]}